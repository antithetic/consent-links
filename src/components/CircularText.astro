---
import { useState, useEffect } from "react";

const {
  text = "Made by Jhey with CSS Trig functions â€¢ ",
  spacing = 1,
  size = 1,
} = Astro.props;

// JavaScript effect for dynamic updates
useEffect(() => {
  const heading = document.querySelector(".ring");
  const chars = text.split("");
  heading.innerHTML = "";
  heading.style.setProperty("--char-count", chars.length);

  chars.forEach((char, index) => {
    heading.innerHTML += `<span aria-hidden="true" class="char" style="--char-index: ${index};">${char}</span>`;
  });

  heading.innerHTML += `<span class="sr-only">${text}</span>`;

  heading.style.setProperty("--font-size", size);
  heading.style.setProperty("--character-width", spacing);
  heading.style.setProperty(
    "--radius",
    `calc((var(--character-width) / sin(var(--inner-angle))) * -1ch)`
  );
}, [text, spacing, size]);
---

<section
  class="flex justify-center items-center min-h-screen bg-gray-900 text-white"
>
  <h1 class="ring text-xl"></h1>
</section>

<style>
  @import url("https://unpkg.com/open-props/normalize.min.css");
  @import url("https://unpkg.com/open-props/open-props.min.css");

  .ring {
    --char-count: 10;
    --inner-angle: calc((360 / var(--char-count)) * 1deg);
    --character-width: 1;
    font-family: monospace;
    text-transform: uppercase;
    font-size: calc(var(--font-size, 1) * 1rem);
    position: relative;
    animation: spin 6s infinite linear;
  }

  .char {
    display: inline-block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%)
      rotate(calc(var(--inner-angle) * var(--char-index)))
      translateY(var(--radius));
  }

  @keyframes spin {
    to {
      rotate: -360deg;
    }
  }
</style>
