---
// src/components/BackgroundPattern.astro
interface Props {
  type: "dots" | "lines" | "squares" | "noise";
  color?: string;
  opacity?: string;
}

const { type, color = "#000000", opacity = "0.1" } = Astro.props;

const patterns = {
  dots: `url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='2' cy='2' r='1' fill='${encodeURIComponent(color)}' fill-opacity='${opacity}'/%3E%3C/svg%3E")`,

  lines: `url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 10h20' stroke='${encodeURIComponent(color)}' stroke-opacity='${opacity}' stroke-width='0.5'/%3E%3C/svg%3E")`,

  squares: `url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='4' height='4' x='2' y='2' fill='${encodeURIComponent(color)}' fill-opacity='${opacity}'/%3E%3C/svg%3E")`,

  noise: `url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='${opacity}' fill='${encodeURIComponent(color)}'/%3E%3C/svg%3E")`,
};
---

<div
  class="absolute inset-0 pointer-events-none"
  style={{
    backgroundImage: patterns[type],
    backgroundRepeat: "repeat",
    backgroundSize: type === "noise" ? "cover" : "20px 20px",
  }}
>
</div>
