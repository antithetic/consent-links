---
import type { SocialLink } from "../../types";
import BackgroundPattern from "./BackgroundPattern.astro";

interface Props {
  link: SocialLink;
}

const { link } = Astro.props;

const platformNames = {
  soundcloud: "Soundcloud",
  instagram: "Instagram",
  ra: "Resident Advisor",
  mixcloud: "Mixcloud",
  threads: "Threads",
  twitter: "Twitter",
  custom: "",
};

const platformIcons = {
  soundcloud: "S",
  instagram: "I",
  ra: "RA",
  mixcloud: "M",
  threads: "T",
  twitter: "T",
  custom: "â€¢",
};

const platformStyles = {
  soundcloud: "bg-[#ff5500]",
  instagram: "bg-[#e4405f]",
  ra: "bg-[#000000]",
  mixcloud: "bg-[#52aad8]",
  threads: "bg-[#000000]",
  twitter: "bg-[#1da1f2]",
  custom: "bg-black",
};

const displayName = link.label || platformNames[link.platform];
const icon = link.icon || platformIcons[link.platform];
const platformBg = platformStyles[link.platform];
---

<a
  href={link.url}
  class="block group"
  target="_blank"
  rel="noopener noreferrer"
>
  <div
    class={`
    flex items-center  whitespace-nowrap rounded-base
    text-sm font-base ring-offset-white transition-all gap-2
    [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0
    focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black focus-visible:ring-offset-2
    disabled:pointer-events-none disabled:opacity-50
    text-mtext bg-main border-2 border-border shadow-shadow
    hover:translate-x-boxShadowX hover:translate-y-boxShadowY hover:shadow-none
    h-10 px-4 py-2 overflow-hidden 
    relative
    ${link.customStyle?.background ? "" : "bg-main"}
    ${link.customStyle?.textColor ? "" : "text-mtext"}
    ${link.customStyle?.borderColor ? "" : "border-border"}
    ${link.customStyle?.borderWidth ? "" : "border-2"}
    ${link.customStyle?.borderRadius ? "" : "rounded-base"}
    ${link.customStyle?.padding ? "" : "px-4 py-2"}
  `}
    style={link.customStyle}
  >
    {
      link.bgPattern && (
        <BackgroundPattern
          type={link.bgPattern.type}
          color={link.bgPattern.color}
          opacity={link.bgPattern.opacity}
        />
      )
    }
    <div class="flex items-center gap-3 relative">
      <div
        class={`
        w-12 
        h-12 
        flex 
        items-center 
        justify-center 
        transition-colors
        border-0
        

        ${platformBg}
        ${link.customIconStyle?.background ? "" : platformBg}
        ${link.customIconStyle?.iconTextColor ? "" : "text-white"}
        ${link.customIconStyle?.borderColor ? "" : "border-border"}
        ${link.customIconStyle?.borderWidth ? "" : "border-0"}
        ${link.customIconStyle?.borderRadius ? "" : "rounded-lg"}
      `}
        style={link.customIconStyle}
      >
        <span class="font-bold">{icon}</span>
      </div>
      <span class="font-semibold ${link.customStyle?.textColor}"
        >{displayName}</span
      >
    </div>
  </div>
</a>
